// $Header: /devl/xcs/repo/env/Databases/CAEInterfaces/verunilibs/s/DCC_FPGACORE.v,v 1.4.6.1 2003/11/18 20:41:33 wloo Exp $
//**************************************************************
//  Copyright (c) 2002 Xilinx Inc.  All Rights Reserved
//  File Name    : DCC_FPGACORE.v
//  Module Name  : DCC_FPGACORE
//  Site         : DCC
//  Spec Version : 1
//  Generated by : write_verilog
//**************************************************************

`timescale 1 ns / 1 ps 

module DCC_FPGACORE (
	CCLK,
	CSB,
	DIN0,
	DIN1,
	DIN2,
	DIN3,
	DIN4,
	DIN5,
	DIN6,
	DIN7,
	DONEIN,
	LBISTISOLATEB,
	M0,
	M1,
	M2,
	PROGB,
	TCK,
	TDI,
	TMS,
	WRITEB,
	BCLK,
	DONEOUT,
	DOUT0,
	DOUT1,
	DOUT2,
	DOUT3,
	DOUT4,
	DOUT5,
	DOUT6,
	DOUT7,
	GSR,
	GTS,
	GWE,
	INITBOUT,
	TDO
);

parameter DEVICE_SIZE = 9'd10;

output BCLK;
output DONEOUT;
output DOUT0;
output DOUT1;
output DOUT2;
output DOUT3;
output DOUT4;
output DOUT5;
output DOUT6;
output DOUT7;
output GSR;
output GTS;
output GWE;
output INITBOUT;
output TDO;

reg BCLK_REG;
reg DONEOUT_REG;
reg DOUT0_REG;
reg DOUT1_REG;
reg DOUT2_REG;
reg DOUT3_REG;
reg DOUT4_REG;
reg DOUT5_REG;
reg DOUT6_REG;
reg DOUT7_REG;
reg GSR_REG;
reg GTS_REG;
reg GWE_REG;
reg INITBOUT_REG;
reg TDO_REG;

input CCLK;
input CSB;
input DIN0;
input DIN1;
input DIN2;
input DIN3;
input DIN4;
input DIN5;
input DIN6;
input DIN7;
input DONEIN;
input LBISTISOLATEB;
input M0;
input M1;
input M2;
input PROGB;
input TCK;
input TDI;
input TMS;
input WRITEB;

reg notifier;

initial begin
        case (DEVICE_SIZE)
                10 : ;
                20 : ;
                40 : ;
                default : begin
                        $display("Attribute Syntax Error : The Attribute DEVICE_SIZE on X_DCC_FPGACORE instance %m is set to %d.  Legal values for this attribute are 10, 20 or 40.", DEVICE_SIZE);
                        $finish;
                end
        endcase

end

buf B_BCLK (BCLK, BCLK_REG);
buf B_DONEOUT (DONEOUT, DONEOUT_REG);
buf B_DOUT0 (DOUT0, DOUT0_REG);
buf B_DOUT1 (DOUT1, DOUT1_REG);
buf B_DOUT2 (DOUT2, DOUT2_REG);
buf B_DOUT3 (DOUT3, DOUT3_REG);
buf B_DOUT4 (DOUT4, DOUT4_REG);
buf B_DOUT5 (DOUT5, DOUT5_REG);
buf B_DOUT6 (DOUT6, DOUT6_REG);
buf B_DOUT7 (DOUT7, DOUT7_REG);
buf B_GSR (GSR, GSR_REG);
buf B_GTS (GTS, GTS_REG);
buf B_GWE (GWE, GWE_REG);
buf B_INITBOUT (INITBOUT, INITBOUT_REG);
buf B_TDO (TDO, TDO_REG);

buf B_CCLK (CCLK_IN, CCLK);
buf B_CSB (CSB_IN, CSB);
buf B_DIN0 (DIN0_IN, DIN0);
buf B_DIN1 (DIN1_IN, DIN1);
buf B_DIN2 (DIN2_IN, DIN2);
buf B_DIN3 (DIN3_IN, DIN3);
buf B_DIN4 (DIN4_IN, DIN4);
buf B_DIN5 (DIN5_IN, DIN5);
buf B_DIN6 (DIN6_IN, DIN6);
buf B_DIN7 (DIN7_IN, DIN7);
buf B_DONEIN (DONEIN_IN, DONEIN);
buf B_LBISTISOLATEB (LBISTISOLATEB_IN, LBISTISOLATEB);
buf B_M0 (M0_IN, M0);
buf B_M1 (M1_IN, M1);
buf B_M2 (M2_IN, M2);
buf B_PROGB (PROGB_IN, PROGB);
buf B_TCK (TCK_IN, TCK);
buf B_TDI (TDI_IN, TDI);
buf B_TMS (TMS_IN, TMS);
buf B_WRITEB (WRITEB_IN, WRITEB);

DCC_FPGACORE_SWIFT dcc_fpgacore_swift_1 (
	.CCLK (CCLK_IN),
	.CSB (CSB_IN),
	.DIN0 (DIN0_IN),
	.DIN1 (DIN1_IN),
	.DIN2 (DIN2_IN),
	.DIN3 (DIN3_IN),
	.DIN4 (DIN4_IN),
	.DIN5 (DIN5_IN),
	.DIN6 (DIN6_IN),
	.DIN7 (DIN7_IN),
	.DONEIN (DONEIN_IN),
	.LBISTISOLATEB (LBISTISOLATEB_IN),
	.M0 (M0_IN),
	.M1 (M1_IN),
	.M2 (M2_IN),
	.PROGB (PROGB_IN),
	.TCK (TCK_IN),
	.TDI (TDI_IN),
	.TMS (TMS_IN),
	.WRITEB (WRITEB_IN),
	.XBID (DEVICE_SIZE),
	.BCLK (BCLK_OUT),
	.DONEOUT (DONEOUT_OUT),
	.DOUT0 (DOUT0_OUT),
	.DOUT1 (DOUT1_OUT),
	.DOUT2 (DOUT2_OUT),
	.DOUT3 (DOUT3_OUT),
	.DOUT4 (DOUT4_OUT),
	.DOUT5 (DOUT5_OUT),
	.DOUT6 (DOUT6_OUT),
	.DOUT7 (DOUT7_OUT),
	.GSR (GSR_OUT),
	.GTS (GTS_OUT),
	.GWE (GWE_OUT),
	.INITBOUT (INITBOUT_OUT),
	.TDO (TDO_OUT)
);

always @(M0 or M1 or M2) begin
	if (PROGB == 1'b1)
	        $display("Timing Violation Error : The M0, M1 and M2 inputs has changed during configuration, when PROGB input is high.  The Mode pins must remain stable to ensure correct configuration.");
end

always @(BCLK_OUT) begin
	BCLK_REG <= BCLK_OUT;
end

always @(DONEOUT_OUT) begin
	DONEOUT_REG <= DONEOUT_OUT;
end

always @(DOUT0_OUT) begin
	DOUT0_REG <= DOUT0_OUT;
end

always @(DOUT1_OUT) begin
	DOUT1_REG <= DOUT1_OUT;
end

always @(DOUT2_OUT) begin
	DOUT2_REG <= DOUT2_OUT;
end

always @(DOUT3_OUT) begin
	DOUT3_REG <= DOUT3_OUT;
end

always @(DOUT4_OUT) begin
	DOUT4_REG <= DOUT4_OUT;
end

always @(DOUT5_OUT) begin
	DOUT5_REG <= DOUT5_OUT;
end

always @(DOUT6_OUT) begin
	DOUT6_REG <= DOUT6_OUT;
end

always @(DOUT7_OUT) begin
	DOUT7_REG <= DOUT7_OUT;
end

always @(GSR_OUT) begin
	GSR_REG <= GSR_OUT;
end

always @(GTS_OUT) begin
	GTS_REG <= GTS_OUT;
end

always @(GWE_OUT) begin
	GWE_REG <= GWE_OUT;
end

always @(INITBOUT_OUT) begin
	INITBOUT_REG <= INITBOUT_OUT;
end

always @(TDO_OUT) begin
	TDO_REG <= TDO_OUT;
end

always @(notifier) begin
	BCLK_REG <= 1'bx;
	DONEOUT_REG <= 1'bx;
	DOUT0_REG <= 1'bx;
	DOUT1_REG <= 1'bx;
	DOUT2_REG <= 1'bx;
	DOUT3_REG <= 1'bx;
	DOUT4_REG <= 1'bx;
	DOUT5_REG <= 1'bx;
	DOUT6_REG <= 1'bx;
	DOUT7_REG <= 1'bx;
	GSR_REG <= 1'bx;
	GTS_REG <= 1'bx;
	GWE_REG <= 1'bx;
	INITBOUT_REG <= 1'bx;
	TDO_REG <= 1'bx;
end

specify
	specparam PATHPULSE$ = 0;

	$period (posedge CCLK, 20:20:20, notifier);
	$period (posedge TCK, 30:30:30, notifier);

	$setuphold (posedge CCLK, negedge CSB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN3, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN4, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN5, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN6, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DIN7, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge DONEIN, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, negedge WRITEB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge CSB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN3, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN4, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN5, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN6, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DIN7, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge DONEIN, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge CCLK, posedge WRITEB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge CCLK, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge CSB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN3, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN4, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN5, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN6, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DIN7, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge DONEIN, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge M0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge M1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge M2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge PROGB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge TCK, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge TDI, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge TMS, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, negedge WRITEB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge CCLK, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge CSB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN3, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN4, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN5, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN6, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DIN7, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge DONEIN, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge M0, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge M1, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge M2, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge PROGB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge TCK, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge TDI, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge TMS, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge LBISTISOLATEB, posedge WRITEB, 5:5:5, 0:0:0, notifier);
	$setuphold (posedge TCK, negedge TDI, 4:4:4, 2:2:2, notifier);
	$setuphold (posedge TCK, negedge TMS, 4:4:4, 2:2:2, notifier);
	$setuphold (posedge TCK, posedge TDI, 4:4:4, 2:2:2, notifier);
	$setuphold (posedge TCK, posedge TMS, 4:4:4, 2:2:2, notifier);

	$width (negedge CCLK, 5:5:5, 0, notifier);
	$width (negedge TCK, 5:5:5, 0, notifier);
	$width (posedge CCLK, 5:5:5, 0, notifier);
	$width (posedge PROGB, 300:300:300, 0, notifier);
	$width (posedge TCK, 5:5:5, 0, notifier);

	(CCLK => DONEOUT) = (5:5:5, 5:5:5);
	(CCLK => DOUT0) = (5:5:5, 5:5:5);
	(CCLK => DOUT1) = (5:5:5, 5:5:5);
	(CCLK => DOUT2) = (5:5:5, 5:5:5);
	(CCLK => DOUT3) = (5:5:5, 5:5:5);
	(CCLK => DOUT4) = (5:5:5, 5:5:5);
	(CCLK => DOUT5) = (5:5:5, 5:5:5);
	(CCLK => DOUT6) = (5:5:5, 5:5:5);
	(CCLK => DOUT7) = (5:5:5, 5:5:5);
	(CCLK => GTS) = (5:5:5, 5:5:5);
	(CCLK => GWE) = (5:5:5, 5:5:5);
	(TCK => TDO) = (10:10:10, 10:10:10);
endspecify

endmodule
